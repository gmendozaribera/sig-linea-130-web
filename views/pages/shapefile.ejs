<!DOCTYPE html>
<html>

<head>
  <% include ../partials/header.ejs %>
  <link type="text/css" href="/css/leaflet.css" rel="stylesheet">
</head>

<body>

  <% include ../partials/nav.ejs %>

  <div class="jumbotron text-center" style="
  background-image: url('/img/website-header-blur-dark.jpg');
  background-repeat: no-repeat;
  background-size: 100%;">
    <div class="container">
      <a href="/" class="lang-logo">
        <img src="/lang-logo.png">
      </a>
      <h1>Gestión de la Linea de Micros 130</h1>
    </div>
  </div>

  <div class="container">
    <div class="row">
      <div class="col-lg-12">

        <div class="card">
          <div class="card-body">
            <h5 class="card-title"><span class="oi oi-map" style="color: darkgreen"></span> Mapa</h5>
            <hr>
            <button class="btn btn-danger" onclick="cargarRutaIda()">
              Cargar ruta de ida</button>
            <button class="btn btn-success" onclick="cargarRutaVuelta()">
              Cargar ruta de vuelta</button>
            <button class="btn btn-secondary" onclick="cargarParadasIda()">
              Cargar paradas de ida</button>
            <button class="btn btn-secondary" onclick="cargarParadasVuelta()">
              Cargar paradas de vuelta</button>
            <button class="btn btn-secondary" onclick="cargarPuntosControl()">
              Cargar puntos de control</button>
            <hr>
            <!-- el mapa Leaflet se renderiza aquí -->
            <div class="map" id="map" style="width: 100%; height: 960px"></div>
          </div>
        </div>

      </div>
    </div>

    <hr>


  </div> <!-- container -->
  <% include ../partials/footer.ejs %>


  <script type="text/javascript" src="/js/leaflet.js"></script>
  <script type="text/javascript" src="/js/geoJsonLoader.js"></script>
  <script>
    // establecer el mapa, pasandole el ID de un DIV en el cual se pueda dibujar
    const map = new L.Map('map');

    // crear la capa de imagenes de mapa con la atribución correcta
    const osmUrl = 'https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
    const osmAttrib = 'Datos de mapa © <a href="https://openstreetmap.org">OpenStreetMap</a> y contribuyentes';
    const osm = new L.TileLayer(osmUrl, { minZoom: 12, maxZoom: 19, attribution: osmAttrib });

    // iniciar el mapa centrado en la plaza 24 de septiembre, zoom nivel 12
    map.setView(new L.LatLng(-17.783318, -63.182120), 12);
    map.addLayer(osm);

    // --------------------- ajax request --------------------

    /*  
     *  Obtiene las caracteristicas de un shapefile especificado como array y las carga
     *  a la instancia del mapa especificado.
     * 
     *  filename: el nombre del archivo a ser obtenido via una peticion ajax
     *  mapInstance: la instancia del mapa a la cual agregar las caracteristicas
     *  
     */
    function loadShpToMap(filename, mapInstance, color = 'blue') {
      try {
        const options = {
          style: function (feature) {
            return { color: color }
          }
        };
        ajaxGetRequest(`http://localhost:5000/get-geojson/${filename}`, (geoJsonArr) => {
          for (i = 0; i < geoJsonArr.length; i++) {
            L.geoJSON(geoJsonArr[i].geometry, options).addTo(mapInstance);
          }
        });
      } catch (error) {
        console.error('Se ha producido un error: \n' + error);
      }
    }


    //  ============================
    //  funciones de los botones :v
    //  ============================
    function cargarRutaIda() {
      loadShpToMap('linea_130_ruta_ida', map, 'red');
    }

    function cargarRutaVuelta() {
      loadShpToMap('linea_130_ruta_vuelta', map, 'green');
    }

    function cargarParadasIda() {
      loadShpToMap('linea_130_paradas_ida', map);
    }

    function cargarParadasVuelta() {
      loadShpToMap('linea_130_paradas_vuelta', map);
    }

    function cargarPuntosControl() {
      loadShpToMap('linea_130_puntos_de_control', map);
    }


  </script>
</body>

</html>