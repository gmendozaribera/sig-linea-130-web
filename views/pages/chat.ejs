<!DOCTYPE html>
<html>

<head>
  <% include ../partials/header.ejs %>
</head>

<body>

  <% include ../partials/nav.ejs %>

  <div class="container">

    <div class="row">
      <div class="col-lg-6">
        &nbsp;

        <div id="messages-card" class="card">
          <div class="card-header">
            <h3 class="card-title.">Chatter</h3>
          </div>
          <div class="card-body">
            <p><i>messages should appear here...</i></p>
            <ul id="messages"></ul>
          </div>
          <div class="card-footer">
            <form action="" class="form-group" id="message-form">
              <div class="input-group">
                <input id="m" autocomplete="off" type="text" class="form-control" placeholder="Type your message here"
                  aria-label="Message:" aria-describedby="button-addon2">
                <div class="input-group-append">
                  <button class="btn btn-secondary" type="submit">Send</button>
                </div>
              </div>
            </form>
          </div>
        </div> <!-- end of panel -->

      </div>
    </div>


  </div> <!-- container -->


  <% include ../partials/footer.ejs %>


  <script src="/socket.io/socket.io.js"></script>
  <script>
    // crear un nombre de usuario aleatorio
    var uname = 'user' + Math.trunc(Math.random() * 100000000);

    // crear una instancia de socket.io cliente (io() sin parámetros significa "esta pc, cualquier")
    // conectarse a la sala "javascript" del namespace "tech"
    const nsp = 'tech';
    const socket = io('http://localhost:5000/' + nsp);
    const room = 'javascript';

    /*  lógica de envio de mensajes:
        1. crear objeto con el texto del mensaje
        2. emitirlo como evento "message"
        3. finalmente borrar el texto del form
    nota: seleccionando elementos del DOM via JQuery */
    $('#message-form').submit(() => {
      const msg = $('#m').val();
      const obj = { room: room, uname: uname, msg: msg };
      socket.emit('message', obj);
      $('#m').val('');  // borrar texto del form
      return false;     // previene el recargado de la página
    });

    // evento "conectarse"
    socket.on('connect', () => {
      // unirse a la sala
      socket.emit('join', { uname: uname, room: room });
    });

    // escuchar por nuevos mensajes
    socket.on('message', (msg) => {
      $('#messages').append($('<li>').text(msg));
    });
  </script>
</body>

</html>